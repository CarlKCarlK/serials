[package]
edition = "2024"
# if this changes, update .vscode/launch.json and .cargo/config.toml
name = "serials"
version = "0.0.1"

# Pure library crate - all applications are in examples/
[lib]
name = "lib"
path = "src/lib.rs"

[dependencies]
defmt = "0.3.10"
defmt-rtt = "1.1.0"
panic-probe = { version = "1.0.0", features = ["print-defmt"] }
cortex-m-rt = "0.7.5"
cortex-m = "0.7.7"
embassy-executor = { version = "0.9.1", features = [
    "arch-cortex-m",
    "executor-thread",
    "defmt",
] }
embassy-sync = { version = "0.7.2" }
embassy-rp = { version = "0.8.0", features = [
    "defmt",
    "time-driver",
    "critical-section-impl",
    "rp2040",
] }
embassy-futures = { version = "0.1.2" }
embassy-time = { version = "0.5.0", features = [
    "defmt",
    "defmt-timestamp-uptime",
] }
derive_more = { version = "2.0.1", default-features = false, features = [
    "debug",
    "display",
    "error",
    "from",
] }
# num-bigint = { version = "0.4.6", default-features = false }
heapless = "0.9.1"
time = { version = "0.3", default-features = false }
rp2040-hal = { version = "0.11.0", features = ["rt"] }
smart-leds = "0.4.0"
smart-leds-trait = "0.3.2"
ws2812-pio = "0.9.0"
critical-section = { version = "1.2.0", features = ["restore-state-u8"] }
rp2040-boot2 = "0.3.0"
embedded-hal = "1.0.0"
embedded-hal-async = "1.0.0"
embedded-io-async = "0.6.1"
embedded-hal-bus = { version = "0.3.0", features = ["async", "portable-atomic"] }
portable-atomic = { version = "1.11.1", features = ["critical-section"] }
hd44780-driver = "0.4.0"
esp-hal-mfrc522 = "0.3.2"
cyw43 = { version = "0.5.0", features = ["defmt", "firmware-logs"] }
cyw43-pio = { version = "0.8.0", features = ["defmt"] }
cyw43-firmware = { version = "0.1", features = ["wifi"] }
embassy-net = { version = "0.7.1", features = ["defmt", "tcp", "udp", "dhcpv4", "dns", "medium-ethernet"] }
static_cell = "2.1.0"
embassy-hal-internal = "0.3.0"

[build-dependencies]
dotenvy = "0.15"

[lints.rust]
# To use the `unsafe` keyword, do not remove the `unsafe_code = "forbid"` entry.
# Instead, prefer to change it to `unsafe_code = "deny"` + opt-in with local use of
# `#[expect(unsafe_code)]`'s on an as needed basis.
bare_trait_objects = "forbid"
rust_2018_idioms = { level = "warn", priority = -2 }
# TODO: Remove when this is stabilized and/or works better. It's giving many false positives at time of writing (2024-08).
unfulfilled_lint_expectations = "warn"
unknown_lints = "warn"
unsafe_code = "deny"
unused_variables = "warn"
# TODO: Determine why `#[expect(unexpected_cfgs)]` at the site of the problem
#       (`target_pointer_width = 128`) is ineffective; the setting below is overly broad
unexpected_cfgs = "warn"

# Uncomment before ship to reconcile use of possibly redundant crates, debug remnants, missing
# license files and more
#missing_docs = "warn"
#warnings = "deny"

[lints.clippy]
# Safety-critical application lints
arithmetic_side_effects = "deny"
float_cmp_const = "deny"
indexing_slicing = "deny"
pedantic = { level = "deny", priority = -2 }
semicolon_if_nothing_returned = "warn"
semicolon_inside_block = "warn"
str_to_string = "warn"
unwrap_used = "deny"
wildcard_imports = "deny"

all = { level = "warn", priority = -2 }
nursery = { level = "warn", priority = -2 }
# End of safety-critical application lints

allow_attributes = "warn"
allow_attributes_without_reason = "deny"
# TODO cargo_common_metadata = { level = "warn", priority = -1 }
# TODO doc_markdown = "warn"
enum_glob_use = "forbid"
enum_variant_names = "warn"
equatable_if_let = "warn"
error_impl_error = "allow"
implicit_return = "allow"
integer_division_remainder_used = "warn"
items-after-statements = "warn"
iter_nth_zero = "warn"
match_bool = "warn"
match-same-arms = "warn"
min_ident_chars = "warn"
missing_docs_in_private_items = { level = "allow", priority = -1 }
missing_errors_doc = "warn"
missing_trait_methods = "warn"
module_name_repetitions = "warn"
multiple_crate_versions = "allow"
obfuscated_if_else = "warn"
pub_use = "allow"
pub_with_shorthand = "warn"
question_mark_used = "allow"
self_named_module_files = "warn"
semicolon_outside_block = "warn"
separated_literal_suffix = "warn"
shadow_reuse = "warn"
shadow_unrelated = "warn"
similar_names = "warn"
single_call_fn = "allow"
std_instead_of_alloc = "warn"
std_instead_of_core = "warn"
too_long_first_doc_paragraph = "warn"
unnecessary_wraps = "warn"
unreachable = "warn"

# TODO: Uncomment before ship to reconcile use of possibly redundant crates, debug remnants, missing
# license files and more
# blanket_clippy_restriction_lints = "warn"
#cargo = "warn"
# restriction = "warn"
